theme = "color-your-world"

defaultContentLanguage = "en"

# Generate a nice robots.txt for SEO
enableRobotsTXT = true

# Setup syntax highlighting without inline styles. For more information about
# why you'd want to avoid inline styles, see
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src#unsafe_inline_styles
[markup]
[markup.highlight]
lineNos = true
lineNumbersInTable = false
# This allows Bear Cub to use a variation of Dracula that is more accessible
# to people with poor eyesight. For more information about color contrast
# and accessibility, see https://web.dev/color-and-contrast-accessibility/
noClasses = false

# Multilingual mode config. More for information about how to setup translation,
# see https://gohugo.io/content-management/multilingual/
[languages]
[languages.en]
title = "Rex Kernel eXtension"
languageName = "en-US"
LanguageCode = "en-US"
contentDir = "content"
[languages.en.params]
madeWith = "Made with [Bear Cub](https://github.com/clente/hugo-bearcub)"

[params]
# The description of your website
description = "Rex is a safe and usable kernel extension framework that allows loading and executing Rust kernel extension programs in the place of eBPF. Unlike eBPF-based frameworks, Rex programs does not go through the in-kernel verifier, instead, the programs are implemented in the safe subset of Rust, on which the Rust compiler performs the needed safety checks and generates native code directly. This approach avoids the overly restricted verification requirements (e.g., program complexity contraints) and the resulting arcane verification errors, while at the same time potentially provides a better optimization opportunity in the native compiler backend (i.e., LLVM) than the eBPF backend + in-kernel JIT approach."

# The path to your favicon
favicon = "images/favicon.png"

# These images will show up when services want to generate a preview of a link
# to your site. Ignored if `generateSocialCard = true`. For more information
# about previews, see https://gohugo.io/templates/internal#twitter-cards and
# https://gohugo.io/templates/internal#open-graph
images = ["./images/ebpf_logo.png"]

# This title is used as the site_name on the Hugo's internal opengraph
# structured data template
title = "Rex Kernel eXtension"

# Dates are displayed following the format below. For more information about
# formatting, see https://gohugo.io/functions/format/
dateFormat = "2006-01-02"

# If your blog is multilingual but you haven't translated a page, this theme
# will create a disabled link. By setting `hideUntranslated` to true, you can
# have the theme simply not show any link
hideUntranslated = false

# (EXPERIMENTAL) This theme has two options for its CSS styles: "original" and
# "herman". The former is what you see on Bear Cub's demo (an optimized
# version of Hugo Bear Blog), while the latter has a more modern look based on
# Herman Martinus's version of the Blogster Minimal theme for Astro.
themeStyle = "original"

# (EXPERIMENTAL) This theme is capable of dynamically generating social cards
# for posts that don't have `images` defined in their front matter; By setting
# `generateSocialCard` to false, you can prevent this behavior. For more
# information see layouts/partials/social_card.html
# generateSocialCard = true

paperTitle = "Rex: Closing the language-verifier gap with safe and usable kernel extensions"
paperAbstract = """
	Safe kernel extensions have gained significant traction, evolving from
simple packet filters to large, complex programs that customize storage,
networking, and scheduling. Existing kernel extension mechanisms like eBPF rely
on in-kernel verifiers to ensure safety of kernel extensions by static
verification using symbolic execution. We identify significant usability
issues—safe extensions being rejected by the verifier—due to the
language-verifier gap, a mismatch between developers’ expectation of program
safety provided by a contract with the programming language, and the verifier’s
expectation. We present Rex, a new kernel extension framework that closes the
language-verifier gap and improves the usability of kernel extensions in terms
of programming experience and maintainability. Rex builds upon language-based
safety to provide safety properties desired by kernel extensions, along with a
lightweight extralingual runtime for properties that are unsuitable for static
analysis, including safe exception handling, stack safety, and termination.
With Rex, kernel extensions are written in safe Rust and interact with the
kernel via a safe interface provided by Rex’s kernel crate. No separate static
verification is needed. Rex addresses usability issues of eBPF kernel
extensions without compromising performance.
  """
paperAuthors = ["Jinghao Jia", "Ruowen Qin"]
paperPublicationDate = "2025-02-01"
paperLink = "https://example.com/ebpf-paper.pdf"


# Social media. Delete any item you aren't using to make sure it won't show up
# in your website's metadata.
# [params.social]
#   twitter = "example" # Twitter handle (without '@')
#   facebook_admin = "0000000000" # Facebook Page Admin ID

# Author metadata. This is mostly used for the RSS feed of your site, but the
# email is also added to the footer of each post. You can hide the "reply to"
# link by using a `hideReply` param in front matter.
[params.author]
name = "Ruowen Qin"
email = "chinqrw@gmail.com"


[params.notFound]
title = "Page not found"
description = "This page was not found."
paragraph = "Welcome to the world of Ave Mujica."


[params.style]
isDark = true
darkAccent = "#1dbc91"
lightAccent = "#1f676b"
presets = [
	"#1f676b",
	"#f3a530",
	"#902b37",
	"#1dbc91",
	"#754e85",
	"#7fc121",
	"#a8314a",
	"#ff7433",
	"#3e6728",
	"#c063bd",
]
